.main__details{

    margin-top: 40px;
}

.details{

    display:flex;
    justify-content: space-around;
    font-size:20px;
    text-align: center;
    align-items: center;
    border-bottom: 1px solid #d0c8c89e;
    height: 60px;
    padding-bottom: 20px;
    padding-top: 20px;

    &__child{
        width: 20%;
    }

    &__total{
        display: flex;
        justify-content: space-around;
        background-color: #6ada6a;
        color: white;
        height: 40px;
        align-items: center;
        font-size: x-large;
        position:absolute;
        bottom:1%;
        width:98%;
        border-bottom-left-radius: 0.625rem;
        border-bottom-right-radius: 0.625rem;
        
       
    }

    &__icon{
        color: #f47272;
        &--trash{
          cursor:pointer;
        }
    }

}



// Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 1em var(--hover);
}

// Animate the size, outside
.pulse:hover, 
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 0.75em rgba(#fff,0);
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}

// Stack multiple shadows, one from the left, the other from the right
.close:hover,
.close:focus {
  box-shadow: 
    inset -1.5em 0 0 0 var(--hover),
    inset 1.5em 0 0 0 var(--hover);  
}

// Size can also be negative; see how it's smaller than the element
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.up:hover,
.up:focus {
  box-shadow: inset 0 -1.25em 0 0 var(--hover);
}

// And from the left
.slide:hover,
.slide:focus {
  box-shadow: inset 2.5em 0 0 0 var(--hover);
}

// Multiple shadows, one on the outside, another on the inside
.offset {  
  box-shadow: 
    0.1em 0.1em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);
  
  &:hover,
  &:focus {
    box-shadow: 
      0 0 0 0 var(--hover),
      inset 3em 1.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
  // Make a map with the class names and matching colors
$colors: (
  fill: #a972cb,
  pulse: #6ada6a, 
  close: #ff7f82, 
  raise: #ffa260, 
  up: #e4cb58, 
  slide: #8fc866, 
  offset: #19bc8b
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {  
  color: var(--color);
  transition: 0.25s;
  
  &:hover,
  &:focus { 
    border-color: var(--hover);
    color: #fff;
  }
}

// Basic button styles
button {
  background: none;
  border: 2px solid;
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
}

h1 { font-weight: 400; }

code { 
  color: #e4cb58;
  font: inherit;
}

.pulse{
    background-color: #049cbd;
    border-radius: 0.65rem;
    color: white;
    
}

.main__top input[type="date"]{
    margin-right: 12px !important;
    margin-left: 12px !important;
    height: 50px;
    position:relative;
    padding:1rem 3.5rem 1rem 0.75rem;
    
    font-size:1rem;
    font-family: Montserrat;
    
    border:1px solid #8292a2;
    border-radius:0.25rem;
    background:
      white
      url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='22' viewBox='0 0 20 22'%3E%3Cg fill='none' fill-rule='evenodd' stroke='%23688EBB' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' transform='translate(1 1)'%3E%3Crect width='18' height='18' y='2' rx='2'/%3E%3Cpath d='M13 0L13 4M5 0L5 4M0 8L18 8'/%3E%3C/g%3E%3C/svg%3E")
      right 1rem
      center
      no-repeat;
    
    cursor:pointer;
  }
  input[type="date"]:focus {
    outline:none;
    border-color:#3acfff;
    box-shadow:0 0 0 0.25rem rgba(0, 120, 250, 0.1);
  }
  
  //::-webkit-datetime-edit {}
  //::-webkit-datetime-edit-fields-wrapper {}
  ::-webkit-datetime-edit-month-field:hover,
  ::-webkit-datetime-edit-day-field:hover,
  ::-webkit-datetime-edit-year-field:hover {
    background:rgba(0, 120, 250, 0.1);
  }
  ::-webkit-datetime-edit-text {
    opacity:0;
  }
  ::-webkit-clear-button,
  ::-webkit-inner-spin-button {
    display:none;
  }
  ::-webkit-calendar-picker-indicator {
    position:absolute;
    width:2.5rem;
    height:100%;
    top:0;
    right:0;
    bottom:0;
    
    opacity:0;
    cursor:pointer;
    
    color:rgba(0, 120, 250, 1);
    background:rgba(0, 120, 250, 1);
   
  }
  
  input[type="date"]:hover::-webkit-calendar-picker-indicator { opacity:0.05; }
  input[type="date"]:hover::-webkit-calendar-picker-indicator:hover { opacity:0.15; }
